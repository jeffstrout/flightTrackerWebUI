name: Deploy Frontend to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test -- --run || true

    - name: Update version info
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        COMMIT_FULL=$(git rev-parse HEAD)
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        CLEAN=$(git diff --quiet && echo true || echo false)
        
        # Update config.js with current git info
        cat > public/config.js << EOF
        // Flight Tracker Web UI Configuration
        window.FLIGHT_TRACKER_CONFIG = {
          VERSION: {
            "version": "1.0.7",
            "commit": "$COMMIT_HASH",
            "commit_full": "$COMMIT_FULL",
            "branch": "$BRANCH",
            "clean": $CLEAN,
            "buildTime": "$BUILD_TIME",
            "environment": "production"
          },
          
          // Application metadata
          APP_INFO: {
            "name": "Flight Tracker Web UI",
            "description": "Real-time flight tracking interface",
            "author": "Flight Tracker Team"
          },
          
          // Cache busting timestamp  
          CACHE_BUST: Date.now(),
          DEPLOY_TIME: "$BUILD_TIME"
        };
        EOF

    - name: Build application
      run: npm run build
      env:
        VITE_API_BASE_URL: http://flight-tracker-alb-790028972.us-east-1.elb.amazonaws.com
        VITE_DEFAULT_REGION: etex
        VITE_REFRESH_INTERVAL: 15000

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to S3
      run: |
        aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }} --delete
        
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
          
    - name: Deployment Summary
      run: |
        echo "âœ… Deployment Complete!"
        echo "CloudFront URL: https://${{ secrets.CLOUDFRONT_DOMAIN }}"